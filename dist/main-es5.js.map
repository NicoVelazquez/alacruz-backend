{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/add-banner/add-banner.component.ts","webpack:///src/app/admin/add-banner/add-banner.component.html","webpack:///src/app/admin/add-product/add-product.component.ts","webpack:///src/app/admin/add-product/add-product.component.html","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/manage-banners/manage-banners.component.ts","webpack:///src/app/admin/manage-banners/manage-banners.component.html","webpack:///src/app/admin/manage-products/manage-products.component.ts","webpack:///src/app/admin/manage-products/manage-products.component.html","webpack:///src/app/admin/sidenav/sidenav.component.ts","webpack:///src/app/admin/sidenav/sidenav.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/product-list/product-list-item/product-list-item.component.ts","webpack:///src/app/product-list/product-list-item/product-list-item.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/shared/guards/auth.guard.ts","webpack:///src/app/shared/helpers/error.interceptor.ts","webpack:///src/app/shared/helpers/jwt.interceptor.ts","webpack:///src/app/shared/models/banner.ts","webpack:///src/app/shared/models/product.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/banner.service.ts","webpack:///src/app/shared/services/product.service.ts","webpack:///src/app/sign-in/sign-in.component.ts","webpack:///src/app/sign-in/sign-in.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddBannerComponent","fb","bannerService","loading","newBanner","addBannerForm","group","name","required","event","setTimeout","target","files","reader","FileReader","onload","event2","photo","result","readAsDataURL","value","imageUrl","toString","createBanner","resetForm","document","getElementById","reset","readUrl","selector","templateUrl","styleUrls","AddProductComponent","productService","newProduct","addProductForm","createProduct","DashboardComponent","route","section","subscription","params","subscribe","unsubscribe","ManageBannersComponent","banners","editedBanner","editBannerForm","getAllBanners","disable","banner","selectedBanner","patchValue","enable","editBanner","deleteBanner","_id","removedBannerId","filter","undefined","ManageProductsComponent","products","editedProduct","editProductForm","getAllProducts","product","selectedProduct","editProduct","deleteProduct","removedProductId","SidenavComponent","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ContactComponent","HeaderComponent","authService","signOut","HomeComponent","ProductListItemComponent","ProductListComponent","productsPerRow","AuthGuard","router","next","state","localStorage","getItem","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","handle","pipe","err","status","location","reload","error","message","statusText","JwtInterceptor","currentUser","JSON","parse","token","clone","setHeaders","Authorization","Banner","Product","AuthService","http","window","email","password","post","apiUrl","toPromise","user","setItem","stringify","removeItem","BannerService","get","ProductService","SignInComponent","invalidEmailOrPassword","signInForm","showPass","valueChanges","signIn","console","log","showPassword","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAG;;AAAiC;;AAAiB;;AAAI;;AAAK;;AAAU;;AAC1E;;;;;;AAgCM;;;;;;AAAK;;;;;;AACL;;;;;;AAEA;;;;QD7BKC,kB;AASX,kCAAoBC,EAApB,EAA6CC,aAA7C,EAA2E;AAAA;;AAAvD,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,aAAA,GAAAA,aAAA;AAH7C,aAAAC,OAAA,GAAU,KAAV;AACA,aAAAC,SAAA,GAAY,KAAZ;AAGE,aAAKC,aAAL,GAAqBJ,EAAE,CAACK,KAAH,CAAS;AAC5BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB;AADsB,SAAT,CAArB;AAGD;;;;mCAEO,CACP;;;gCAEOC,K,EAAY;AAAA;;AAClB,eAAKN,OAAL,GAAe,IAAf;AACAO,oBAAU,CAAC,YAAM;AACf,gBAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,IAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,oBAAM,CAACE,MAAP,GAAgB,UAACC,MAAD,EAA2B;AACzC,qBAAI,CAACC,KAAL,GAAcD,MAAM,CAACL,MAAP,CAA6BO,MAA3C;AACD,eAFD;;AAGAL,oBAAM,CAACM,aAAP,CAAqBV,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB;AACD;;AACD,iBAAI,CAACT,OAAL,GAAe,KAAf;AACD,WATS,EASP,GATO,CAAV;AAUD;;;uCAEc;AAAA;;AACb,cAAMI,IAAI,GAAG,KAAKF,aAAL,CAAmBe,KAAnB,CAAyBb,IAAtC;AACA,cAAMc,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,QAAX,EAAjB;AACA,cAAMlB,SAAS,GAAG,IAAI,4DAAJ,CAAWG,IAAX,EAAiBc,QAAjB,CAAlB;AACA,eAAKnB,aAAL,CAAmBqB,YAAnB,CAAgCnB,SAAhC,EACGZ,IADH,CACQ,YAAM;AACV,kBAAI,CAACY,SAAL,GAAiB,IAAjB;;AACA,kBAAI,CAACoB,SAAL;AACD,WAJH;AAKD;;;oCAEW;AACTC,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAoDC,KAApD;AACD,eAAKV,KAAL,GAAa,IAAb;AACD;;;;;;;uBA9CUjB,kB,EAAkB,2H,EAAA,8I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,gxC;AAAA;AAAA;ACV/B;;AAEE;;AAIA;;AAEE;;AACE;;AAAI;;AAAc;;AAClB;;AAEE;;AACE;;AAEF;;AAEA;;AACE;;AACE;;AAAmB;AAAA,mBAAU,IAAA4B,OAAA,QAAV;AAAyB,WAAzB;;AAAnB;;AACA;;AACF;;AACF;;AAEA;;AACQ;AAAA,mBAAS,IAAAL,YAAA,EAAT;AAAuB,WAAvB;;AACN;;AACF;;AAEF;;AACF;;AAEA;;AACE;;AAAI;;AAAO;;AAEX;;AACE;;AACA;;AAEA;;AACF;;AAEF;;AAEF;;AAEF;;;;AA5C2C;;AAAA;;AAQP;;AAAA;;AAeK;;AAAA;;AAWc;;AAAA;;AACsB;;AAAA;;AAER;;AAAA;;;;;;;;;sED7BxDvB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT6B,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAG;;AAAkC;;AAAiB;;AAAI;;AAAK;;AAAU;;AAC3E;;;;;;AAgCM;;;;;;AAAK;;;;;;AACL;;;;;;AAEA;;;;;;AAEA;;AACE;;AAAkB;;AAAI;;AAA6B;;AAAK;;AAC1D;;;;;;AADwB;;AAAA;;;;QDhCnBC,mB;AASX,mCAAoB/B,EAApB,EAA6CgC,cAA7C,EAA6E;AAAA;;AAAzD,aAAAhC,EAAA,GAAAA,EAAA;AAAyB,aAAAgC,cAAA,GAAAA,cAAA;AAH7C,aAAA9B,OAAA,GAAU,KAAV;AACA,aAAA+B,UAAA,GAAa,KAAb;AAGE,aAAKC,cAAL,GAAsBlC,EAAE,CAACK,KAAH,CAAS;AAC7BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB;AADuB,SAAT,CAAtB;AAGD;;;;mCAEO,CACP;;;gCAEOC,K,EAAY;AAAA;;AAClB,eAAKN,OAAL,GAAe,IAAf;AACAO,oBAAU,CAAC,YAAM;AACf,gBAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,IAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,oBAAM,CAACE,MAAP,GAAgB,UAACC,MAAD,EAA2B;AACzC,sBAAI,CAACC,KAAL,GAAcD,MAAM,CAACL,MAAP,CAA6BO,MAA3C;AACD,eAFD;;AAGAL,oBAAM,CAACM,aAAP,CAAqBV,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB;AACD;;AACD,kBAAI,CAACT,OAAL,GAAe,KAAf;AACD,WATS,EASP,GATO,CAAV;AAUD;;;wCAEe;AAAA;;AACd,cAAMI,IAAI,GAAG,KAAK4B,cAAL,CAAoBf,KAApB,CAA0Bb,IAAvC;AACA,cAAMc,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,QAAX,EAAjB;AACA,cAAMY,UAAU,GAAG,IAAI,8DAAJ,CAAY3B,IAAZ,EAAkBc,QAAlB,CAAnB;AACA,eAAKY,cAAL,CAAoBG,aAApB,CAAkCF,UAAlC,EACG1C,IADH,CACQ,YAAM;AACV,kBAAI,CAAC0C,UAAL,GAAkB,IAAlB;;AACA,kBAAI,CAACV,SAAL;AACD,WAJH;AAKD;;;oCAEW;AACTC,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAoDC,KAApD;AACD,eAAKV,KAAL,GAAa,IAAb;AACD;;;;;;;uBA9CUe,mB,EAAmB,2H,EAAA,gJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,o4C;AAAA;AAAA;ACVhC;;AAEE;;AAIA;;AAEE;;AACE;;AAAI;;AAAe;;AACnB;;AAEE;;AACE;;AAEF;;AAEA;;AACE;;AACE;;AAAmB;AAAA,mBAAU,IAAAJ,OAAA,QAAV;AAAyB,WAAzB;;AAAnB;;AACA;;AACF;;AACF;;AAEA;;AACQ;AAAA,mBAAS,IAAAQ,aAAA,EAAT;AAAwB,WAAxB;;AACN;;AACF;;AAEF;;AACF;;AAEA;;AACE;;AAAI;;AAAO;;AAEX;;AACE;;AACA;;AAEA;;AAEA;;AAGF;;AAGF;;AACF;;AAEF;;;;AAhD2C;;AAAA;;AAQN;;AAAA;;AAeK;;AAAA;;AAWa;;AAAA;;AACsB;;AAAA;;AAED;;AAAA;;AAE3C;;AAAA;;;;;;;;;sED/BpBJ,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTH,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKI;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;QDCSM,kB;AAKX,kCAAoBC,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AAHpB,aAAAC,OAAA,GAAU,aAAV;AAIC;;;;mCAEO;AAAA;;AACN,eAAKC,YAAL,GAAoB,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,SAAlB,CAA4B,UAAAD,MAAM,EAAI;AACxD,gBAAIA,MAAM,CAACF,OAAX,EAAoB;AAClB,oBAAI,CAACA,OAAL,GAAeE,MAAM,CAACF,OAAtB;AACD;AACF,WAJmB,CAApB;AAKD;;;sCAEU;AACT,eAAKC,YAAL,CAAkBG,WAAlB;AACD;;;;;;;uBAlBUN,kB,EAAkB,+H;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,uJ;AAAA;AAAA;ACT/B;;AAEE;;AAEA;;AACE;;AACA;;AACA;;AACA;;AACF;;AAGF;;;;AARwC;;AAAA;;AAEf;;AAAA;;AACL;;AAAA;;AACI;;AAAA;;;;;;;;;sEDCXA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTR,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAG;;AAAkC;;AAAiB;;AAAI;;AAAK;;AAAU;;AAC3E;;;;;;;;AAOM;;AAAmC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AACA;;AACF;;;;;;AAFE;;AAAA;;;;;;AA4CJ;;;;;;AAAK;;;;;;AACL;;;;;;AAEA;;;;QDjDOa,sB;AAYX,sCAAoB3C,EAApB,EAA6CC,aAA7C,EAA2E;AAAA;;AAAvD,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,aAAA,GAAAA,aAAA;AAR7C,aAAA2C,OAAA,GAAU,EAAV;AAKA,aAAA1C,OAAA,GAAU,KAAV;AACA,aAAA2C,YAAA,GAAe,KAAf;AAGE,aAAKC,cAAL,GAAsB9C,EAAE,CAACK,KAAH,CAAS;AAC7BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB;AADuB,SAAT,CAAtB;AAGD;;;;mCAEO;AAAA;;AACN,eAAKN,aAAL,CAAmB8C,aAAnB,GAAmCxD,IAAnC,CAAwC,UAAAqD,OAAO;AAAA,mBAAI,MAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WAA/C;AACA,eAAKE,cAAL,CAAoBE,OAApB;AACD;;;qCAEYC,M,EAAa;AACxB,eAAK1B,SAAL;AACA,eAAK2B,cAAL,GAAsBD,MAAtB;AACA,eAAKH,cAAL,CAAoBK,UAApB,CAA+B;AAAC7C,gBAAI,EAAE2C,MAAM,CAAC3C;AAAd,WAA/B;AACA,eAAKU,KAAL,GAAaiC,MAAM,CAAC7B,QAApB;AACA,eAAK0B,cAAL,CAAoBM,MAApB;AACD;;;gCAEO5C,K,EAAY;AAAA;;AAClB,eAAKN,OAAL,GAAe,IAAf;AACAO,oBAAU,CAAC,YAAM;AACf,gBAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,IAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,oBAAM,CAACE,MAAP,GAAgB,UAACC,MAAD,EAA2B;AACzC,sBAAI,CAACC,KAAL,GAAcD,MAAM,CAACL,MAAP,CAA6BO,MAA3C;AACD,eAFD;;AAGAL,oBAAM,CAACM,aAAP,CAAqBV,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB;AACD;;AACD,kBAAI,CAACT,OAAL,GAAe,KAAf;AACD,WATS,EASP,GATO,CAAV;AAUD;;;qCAEY;AAAA;;AACX,eAAKgD,cAAL,CAAoB5C,IAApB,GAA2B,KAAKwC,cAAL,CAAoB3B,KAApB,CAA0Bb,IAArD;;AACA,cAAI,KAAK4C,cAAL,CAAoB9B,QAApB,KAAiC,KAAKJ,KAA1C,EAAiD;AAC/C,iBAAKkC,cAAL,CAAoB9B,QAApB,GAA+B,KAAKJ,KAAL,CAAWK,QAAX,EAA/B;AACD;;AACD,eAAKpB,aAAL,CAAmBoD,UAAnB,CAA8B,KAAKH,cAAnC,EACG3D,IADH,CACQ,YAAM;AACV,kBAAI,CAACsD,YAAL,GAAoB,IAApB;AACD,WAHH;AAID;;;uCAEc;AAAA;;AACb,eAAK5C,aAAL,CAAmBqD,YAAnB,CAAgC,KAAKJ,cAAL,CAAoBK,GAApD,EACGhE,IADH,CACQ,UAAAiE,eAAe,EAAI;AACvB,kBAAI,CAACZ,OAAL,GAAe,MAAI,CAACA,OAAL,CAAaa,MAAb,CAAoB,UAAAjE,CAAC;AAAA,qBAAIA,CAAC,CAAC+D,GAAF,KAAUC,eAAd;AAAA,aAArB,CAAf;;AACA,kBAAI,CAACjC,SAAL;AACD,WAJH;AAKD;;;oCAEW;AACTC,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAoDC,KAApD;AACD,eAAKwB,cAAL,GAAsBQ,SAAtB;AACA,eAAK1C,KAAL,GAAa,IAAb;AACD;;;;;;;uBApEU2B,sB,EAAsB,2H,EAAA,8I;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,2jD;AAAA;AAAA;ACVnC;;AAEE;;AAKA;;AACE;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AAIF;;AACF;;AAEA;;AACE;;AAAI;;AAAI;;AACR;;AAEE;;AACE;;AAEF;;AAEA;;AACE;;AACE;;AAAmB;AAAA,mBAAU,IAAAhB,OAAA,QAAV;AAAyB,WAAzB;;AAAnB;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACQ;AAAA,mBAAS,IAAA0B,UAAA,EAAT;AAAqB,WAArB;;AAIN;;AACF;;AACA;;AACQ;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAEN;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AACA;;AAEA;;AACF;;AACF;;AAGF;;;;AA9D2C;;AAAA;;AAS/B;;AAAA;;AASwB;;AAAA;;AAiBlB;;AAAA;;AAOA;;AAAA;;AAY4B;;AAAA;;AACsB;;AAAA;;AAED;;AAAA;;;;;;;;;sEDjDtDX,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTf,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAG;;AAAmC;;AAAiB;;AAAI;;AAAK;;AAAU;;AAC5E;;;;;;;;AAOM;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACA;;AACF;;;;;;AAFE;;AAAA;;;;;;AA4CJ;;;;;;AAAK;;;;;;AACL;;;;;;AAEA;;;;;;AAEA;;AACE;;AAAkB;;AAAI;;AAA8B;;AAAK;;AAC3D;;;;;;AADwB;;AAAA;;;;QDpDjB6B,uB;AAYX,uCAAoB3D,EAApB,EAA6CgC,cAA7C,EAA6E;AAAA;;AAAzD,aAAAhC,EAAA,GAAAA,EAAA;AAAyB,aAAAgC,cAAA,GAAAA,cAAA;AAR7C,aAAA4B,QAAA,GAAW,EAAX;AAKA,aAAA1D,OAAA,GAAU,KAAV;AACA,aAAA2D,aAAA,GAAgB,KAAhB;AAGE,aAAKC,eAAL,GAAuB9D,EAAE,CAACK,KAAH,CAAS;AAC9BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB;AADwB,SAAT,CAAvB;AAGD;;;;mCAEO;AAAA;;AACN,eAAKyB,cAAL,CAAoB+B,cAApB,GAAqCxE,IAArC,CAA0C,UAAAqE,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAlD;AACA,eAAKE,eAAL,CAAqBd,OAArB;AACD;;;sCAEagB,O,EAAc;AAC1B,eAAKzC,SAAL;AACA,eAAK0C,eAAL,GAAuBD,OAAvB;AACA,eAAKF,eAAL,CAAqBX,UAArB,CAAgC;AAAC7C,gBAAI,EAAE0D,OAAO,CAAC1D;AAAf,WAAhC;AACA,eAAKU,KAAL,GAAagD,OAAO,CAAC5C,QAArB;AACA,eAAK0C,eAAL,CAAqBV,MAArB;AACD;;;gCAEO5C,K,EAAY;AAAA;;AAClB,eAAKN,OAAL,GAAe,IAAf;AACAO,oBAAU,CAAC,YAAM;AACf,gBAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,IAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,oBAAM,CAACE,MAAP,GAAgB,UAACC,MAAD,EAA2B;AACzC,uBAAI,CAACC,KAAL,GAAcD,MAAM,CAACL,MAAP,CAA6BO,MAA3C;AACD,eAFD;;AAGAL,oBAAM,CAACM,aAAP,CAAqBV,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB;AACD;;AACD,mBAAI,CAACT,OAAL,GAAe,KAAf;AACD,WATS,EASP,GATO,CAAV;AAUD;;;sCAEa;AAAA;;AACZ,eAAK+D,eAAL,CAAqB3D,IAArB,GAA4B,KAAKwD,eAAL,CAAqB3C,KAArB,CAA2Bb,IAAvD;;AACA,cAAI,KAAK2D,eAAL,CAAqB7C,QAArB,KAAkC,KAAKJ,KAA3C,EAAkD;AAChD,iBAAKiD,eAAL,CAAqB7C,QAArB,GAAgC,KAAKJ,KAAL,CAAWK,QAAX,EAAhC;AACD;;AACD,eAAKW,cAAL,CAAoBkC,WAApB,CAAgC,KAAKD,eAArC,EACG1E,IADH,CACQ,YAAM;AACV,mBAAI,CAACsE,aAAL,GAAqB,IAArB;AACD,WAHH;AAID;;;wCAEe;AAAA;;AACd,eAAK7B,cAAL,CAAoBmC,aAApB,CAAkC,KAAKF,eAAL,CAAqBV,GAAvD,EACGhE,IADH,CACQ,UAAA6E,gBAAgB,EAAI;AACxB,mBAAI,CAACR,QAAL,GAAgB,OAAI,CAACA,QAAL,CAAcH,MAAd,CAAqB,UAAAjE,CAAC;AAAA,qBAAIA,CAAC,CAAC+D,GAAF,KAAUa,gBAAd;AAAA,aAAtB,CAAhB;;AACA,mBAAI,CAAC7C,SAAL;AACD,WAJH;AAKD;;;oCAEW;AACTC,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAoDC,KAApD;AACD,eAAKuC,eAAL,GAAuBP,SAAvB;AACA,eAAK1C,KAAL,GAAa,IAAb;AACD;;;;;;;uBApEU2C,uB,EAAuB,2H,EAAA,gJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,uoD;AAAA;AAAA;ACVpC;;AAEE;;AAKA;;AACE;;AACE;;AAAI;;AAAQ;;AACZ;;AACE;;AAIF;;AACF;;AAEA;;AACE;;AAAI;;AAAI;;AACR;;AAEE;;AACE;;AAEF;;AAEA;;AACE;;AACE;;AAAmB;AAAA,mBAAU,IAAAhC,OAAA,QAAV;AAAyB,WAAzB;;AAAnB;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACQ;AAAA,mBAAS,IAAAuC,WAAA,EAAT;AAAsB,WAAtB;;AAIN;;AACF;;AACA;;AACQ;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAEN;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AACA;;AAEA;;AAEA;;AAGF;;AACF;;AAGF;;;;AAlE2C;;AAAA;;AAS/B;;AAAA;;AASyB;;AAAA;;AAiBnB;;AAAA;;AAOA;;AAAA;;AAY4B;;AAAA;;AACsB;;AAAA;;AAED;;AAAA;;AAEpC;;AAAA;;;;;;;;;sEDnDlBR,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT/B,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauC,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,0Y;AAAA;AAAA;ACP7B;;AACE;;AACE;;AAAI;;AAAuC;;AAAW;;AAAI;;AAC1D;;AAAI;;AAA2C;;AAAe;;AAAI;;AAClE;;AACA;;AAAI;;AAAsC;;AAAU;;AAAI;;AACxD;;AAAI;;AAA0C;;AAAc;;AAAI;;AAClE;;AAQF;;;;;;;;;sEDRaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTzC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMwC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE;AAAtB,KADqB,EAErB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE;AAA7B,KAFqB,EAGrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAACD,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE,uFAA/B;AAAmDC,iBAAW,EAAE,CAAC,mEAAD;AAAhE,KAJqB,EAKrB;AAACF,UAAI,EAAE,oBAAP;AAA6BC,eAAS,EAAE,uFAAxC;AAA4DC,iBAAW,EAAE,CAAC,mEAAD;AAAzE,KALqB,EAMrB;AAACF,UAAI,EAAE,IAAP;AAAaC,eAAS,EAAE;AAAxB,KANqB,CAAvB;;QAaaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERzE,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACtB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagF,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,qC;AAAA;AAAA;ACPzB;;AAEA;;AACE;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTjD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuDaiD,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBART,CACT;AAAEC,eAAO,EAAE,uEAAX;AAA8BC,gBAAQ,EAAE,+EAAxC;AAAwDC,aAAK,EAAE;AAA/D,OADS,EAET;AAAEF,eAAO,EAAE,uEAAX;AAA8BC,gBAAQ,EAAE,mFAAxC;AAA0DC,aAAK,EAAE;AAAjE,OAFS,C;AAKV,gBAZQ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,sEALO,CAYR;;;;0HAGUH,S,EAAS;AAAA,uBA7BlB,2DA6BkB,EA5BlB,wEA4BkB,EA3BlB,kEA2BkB,EA1BlB,yFA0BkB,EAzBlB,oHAyBkB,EAxBlB,0EAwBkB,EAvBlB,yGAuBkB,EAtBlB,kFAsBkB,EArBlB,6FAqBkB,EApBlB,wFAoBkB,EAnBlB,0FAmBkB,EAlBlB,sGAkBkB,EAjBlB,4EAiBkB;AAjBF,kBAGhB,uEAHgB,EAIhB,oEAJgB,EAKhB,0DALgB,EAMhB,kEANgB,EAOhB,sEAPgB;AAiBE,O;AAVF,K;;;;;sEAUPA,S,EAAS;cA/BrB,sDA+BqB;eA/BZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,kEAHY,EAIZ,yFAJY,EAKZ,oHALY,EAMZ,0EANY,EAOZ,yGAPY,EAQZ,kFARY,EASZ,6FATY,EAUZ,wFAVY,EAWZ,0FAXY,EAYZ,sGAZY,EAaZ,4EAbY,CADN;AAgBRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,sEALO,CAhBD;AAuBRQ,mBAAS,EAAE,CACT;AAAEJ,mBAAO,EAAE,uEAAX;AAA8BC,oBAAQ,EAAE,+EAAxC;AAAwDC,iBAAK,EAAE;AAA/D,WADS,EAET;AAAEF,mBAAO,EAAE,uEAAX;AAA8BC,oBAAQ,EAAE,mFAAxC;AAA0DC,iBAAK,EAAE;AAAjE,WAFS,CAvBH;AA6BRG,mBAAS,EAAE,CAAC,2DAAD;AA7BH,S;AA+BY,Q;;;;;;;;;;;;;;;;;;ACvDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACP7B;;AAAG;;AAAc;;;;;;;;sEDOJA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT1D,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBE;;AAEE;;AACE;;AAAI;;AAA0B;;AAAS;;AAAI;;AAC3C;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AAAI;;AACtE;;AAEF;;;;QDfWyD,e;AAEX,+BAAmBC,WAAnB,EAA6C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAClB;;;;mCAEO,CACP;;;kCAES;AACR,eAAKA,WAAL,CAAiBC,OAAjB;AACD;;;;;;;uBAVUF,e,EAAe,0I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,+uB;AAAA;AAAA;ACP5B;;AACE;;AAEE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAAI;;AAAiB;;AAAI;;AAAI;;AAC7B;;AAAI;;AAAyB;;AAAQ;;AAAI;;AAC3C;;AAEF;;AAEA;;AAQF;;AAIA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEE;;AAEA;;AAAI;;AAAK;;AAEX;;AACF;;;;AAtC+B;;AAAA;;;;;;;;;sEDRlBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3D,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOQ;;AACE;;AACF;;;;;;AADO;;AAAA;;;;QDIF4D,a;AAKX,6BAAoB1D,cAApB,EAA4D/B,aAA5D,EAA0F;AAAA;;AAAtE,aAAA+B,cAAA,GAAAA,cAAA;AAAwC,aAAA/B,aAAA,GAAAA,aAAA;AAC3D;;;;mCAEO;AAAA;;AACN,eAAK+B,cAAL,CAAoB+B,cAApB,GAAqCxE,IAArC,CAA0C,UAAAqE,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAlD;AAEA,eAAK3D,aAAL,CAAmB8C,aAAnB,GAAmCxD,IAAnC,CAAwC,UAAAqD,OAAO;AAAA,mBAAI,OAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WAA/C;AACD;;;;;;;uBAZU8C,a,EAAa,gJ,EAAA,8I;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,upB;AAAA;AAAA;ACZ1B;;AAEE;;AACE;;AAGE;;AACE;;AAGF;;AAEA;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AAEE;;AAA0B;;AAAkB;;AAE5C;;AACF;;AACF;;AAEF;;;;AAtBY;;AAAA;;AAkBY;;AAAA;;;;;;;;;sEDbXA,a,EAAa;cALzB,uDAKyB;eALf;AACT9D,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6D,wB;AAIX,0CAAc;AAAA;AACb;;;;mCAEO,CACP;;;;;;;uBARUA,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,4C;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qI;AAAA;AAAA;ACRrC;;AACE;;AAEA;;AACE;;AAAkB;;AAAI;;AAAiB;;AAAK;;AAC9C;;AACF;;;;AALO;;AAAA;;AAGmB;;AAAA;;;;;;;;sEDIbA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT/D,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;gBAElC;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;AAAwD;;;;QDM7C8D,oB;AAOX,sCAAc;AAAA;;AAHd,aAAAC,cAAA,GAAiB,CAAjB;AAIC;;;;mCAEO,CACP;;;;;;;uBAXUD,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACPjC;;AACE;;AACF;;;;AAFK;;AACoB;;AAAA;;;;;;;;;sEDMZA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACThE,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagE,S;AAEX,yBAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;oCAGCC,I,EACAC,K,EAA0B;AAC1B,cAAIC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvC,mBAAO,IAAP;AACD;;AAED,eAAKJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACC,uBAAW,EAAE;AAACC,uBAAS,EAAEL,KAAK,CAACM;AAAlB;AAAd,WAAjC;AACA,iBAAO,KAAP;AACD;;;;;;;uBAdUT,S,EAAS,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVU,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,gB;AACX,gCAAoBjB,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AACnB;;;;kCAESkB,O,EAA2BV,I,EAAiB;AAAA;;AACpD,iBAAOA,IAAI,CAACW,MAAL,CAAYD,OAAZ,EAAqBE,IAArB,CAA0B,kEAAW,UAAAC,GAAG,EAAI;AACjD,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,qBAAI,CAACtB,WAAL,CAAiBC,OAAjB;;AACAsB,sBAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD;;AACD,gBAAMC,KAAK,GAAGJ,GAAG,CAACI,KAAJ,CAAUC,OAAV,IAAqBL,GAAG,CAACM,UAAvC;AACA,mBAAO,wDAAWF,KAAX,CAAP;AACD,WARgC,CAA1B,CAAP;AASD;;;;;;;uBAdUR,gB,EAAgB,0H;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaW,c;;;;;;;kCACDV,O,EAA2BV,I,EAAiB;AACpD;AACA,cAAMqB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWrB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;;AACA,cAAIkB,WAAW,IAAIA,WAAW,CAACG,KAA/B,EAAsC;AACpCd,mBAAO,GAAGA,OAAO,CAACe,KAAR,CAAc;AACtBC,wBAAU,EAAE;AACVC,6BAAa,mBAAYN,WAAW,CAACG,KAAxB;AADH;AADU,aAAd,CAAV;AAKD;;AAED,iBAAOxB,IAAI,CAACW,MAAL,CAAYD,OAAZ,CAAP;AACD;;;;;;;uBAbUU,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;;QAAaQ,M,GACX;AACA,oBAAmBtH,IAAnB,EAAwCc,QAAxC,EAAiEmC,GAAjE,EAA+E;AAAA;;AAA5D,WAAAjD,IAAA,GAAAA,IAAA;AAAqB,WAAAc,QAAA,GAAAA,QAAA;AAAyB,WAAAmC,GAAA,GAAAA,GAAA;AAChE,K;;;;;;;;;;;;;;;;;ACHH;AAAA;;;AAAA;AAAA;AAAA;;QAAasE,O,GACX;AACA,qBAAmBvH,IAAnB,EAAwCc,QAAxC,EAAiEmC,GAAjE,EAA+E;AAAA;;AAA5D,WAAAjD,IAAA,GAAAA,IAAA;AAAqB,WAAAc,QAAA,GAAAA,QAAA;AAAyB,WAAAmC,GAAA,GAAAA,GAAA;AAChE,K;;;;;;;;;;;;;;;;;ACHH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQauE,W;AAEX,2BAAoBC,IAApB,EAA8ChC,MAA9C,EAA8D;AAAA;;AAA1C,aAAAgC,IAAA,GAAAA,IAAA;AAA0B,aAAAhC,MAAA,GAAAA,MAAA;AAC7C;;;;iCAEe;AACd,iBAAOiC,MAAM,CAAC9B,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,MAA+C,IAAtD;AACD;;;+BAEa8B,K,EAAeC,Q,EAAkB;AAC7C,iBAAO,KAAKH,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,mBAAyD;AAACH,iBAAK,EAALA,KAAD;AAAQC,oBAAQ,EAARA;AAAR,WAAzD,EAA4EG,SAA5E,GACJ9I,IADI,CACC,UAAA+I,IAAI,EAAI;AACZ,gBAAIA,IAAI,IAAIA,IAAI,CAACd,KAAjB,EAAwB;AACtB;AACAtB,0BAAY,CAACqC,OAAb,CAAqB,aAArB,EAAoCjB,IAAI,CAACkB,SAAL,CAAeF,IAAf,CAApC;AACD;;AAED,mBAAOA,IAAP;AACD,WARI,CAAP;AASD;;;kCAEgB;AACfpC,sBAAY,CAACuC,UAAb,CAAwB,aAAxB;AACA,eAAK1C,MAAL,CAAYK,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;;;;;;uBAxBU0B,W,EAAW,uH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVtB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakC,a;AAEX,6BAAoBX,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;wCAEmB;AAClB,iBAAO,KAAKA,IAAL,CAAUY,GAAV,WAAsB,sEAAYP,MAAlC,iBAAsDC,SAAtD,EAAP;AACD;;;qCAEmBpF,M,EAAc;AAChC,iBAAO,KAAK8E,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,oBAA0DnF,MAA1D,EAAkEoF,SAAlE,EAAP;AACD;;;mCAEiBpF,M,EAAc;AAC9B,iBAAO,KAAK8E,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,kBAAwDnF,MAAxD,EAAgEoF,SAAhE,EAAP;AACD;AAED;;;;;AAKA;;;;qCACoB9E,G,EAAW;AAC7B,iBAAO,KAAKwE,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,oBAA0D;AAAC7E,eAAG,EAAHA;AAAD,WAA1D,EAAiE8E,SAAjE,EAAP;AACD;;;;;;;uBAzBUK,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVlC,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAboC,c;AAEX,8BAAoBb,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;yCAE0B;;;;;;qDAClB,KAAKA,IAAL,CAAUY,GAAV,WAAsB,sEAAYP,MAAlC,kBAAuDC,SAAvD,E;;;;;;;;;AACR;;;sCAGoBrE,O,EAAgB;AACnC,iBAAO,KAAK+D,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,qBAA2DpE,OAA3D,EAAoEqE,SAApE,EAAP;AACD;;;oCAEkBrE,O,EAAgB;AACjC,iBAAO,KAAK+D,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,mBAAyDpE,OAAzD,EAAkEqE,SAAlE,EAAP;AACD;AAED;;;;;AAKA;;;;sCACqB9E,G,EAAW;AAC9B,iBAAO,KAAKwE,IAAL,CAAUI,IAAV,WAAuB,sEAAYC,MAAnC,qBAA2D;AAAC7E,eAAG,EAAHA;AAAD,WAA3D,EAAkE8E,SAAlE,EAAP;AACD;;;;;;;uBA1BUO,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVpC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBI;;AACE;;AACF;;;;QDTSqC,e;AAOX,+BAAoB7I,EAApB,EAA6CwF,WAA7C,EAA+EO,MAA/E,EAA+F;AAAA;;AAA3E,aAAA/F,EAAA,GAAAA,EAAA;AAAyB,aAAAwF,WAAA,GAAAA,WAAA;AAAkC,aAAAO,MAAA,GAAAA,MAAA;AAF/E,aAAA+C,sBAAA,GAAyB,KAAzB;AAGE,aAAKC,UAAL,GAAkB/I,EAAE,CAACK,KAAH,CAAS;AACzB4H,eAAK,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW1H,QAAZ,CAAtB,CADkB;AAEzB2H,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW3H,QAAZ,CAAtB;AAFe,SAAT,CAAlB;AAID;;;;mCAEO;AAAA;;AACN,eAAKyI,QAAL,GAAgB,KAAhB;AAEA,eAAKD,UAAL,CAAgBJ,GAAhB,CAAoB,OAApB,EAA6BM,YAA7B,CAA0CxG,SAA1C,CAAoD,YAAM;AACxD,mBAAI,CAACqG,sBAAL,GAA8B,KAA9B;AACD,WAFD;AAIA,eAAKC,UAAL,CAAgBJ,GAAhB,CAAoB,UAApB,EAAgCM,YAAhC,CAA6CxG,SAA7C,CAAuD,YAAM;AAC3D,mBAAI,CAACqG,sBAAL,GAA8B,KAA9B;AACD,WAFD;AAGD;;;uCAEc;AACb,eAAKE,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;iCAEQ;AAAA;;AACP,eAAKxD,WAAL,CAAiB0D,MAAjB,CAAwB,KAAKH,UAAL,CAAgB5H,KAAhB,CAAsB8G,KAA9C,EAAqD,KAAKc,UAAL,CAAgB5H,KAAhB,CAAsB+G,QAA3E,EAAqF3I,IAArF,CAA0F,YAAM;AAC9F,mBAAI,CAACwJ,UAAL,CAAgBrH,KAAhB;;AACA,mBAAI,CAACqE,MAAL,CAAYK,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD,WAHD,WAGS,UAAAS,GAAG,EAAI;AACd,gBAAIA,GAAG,KAAK,qBAAZ,EAAmC;AACjC,qBAAI,CAACiC,sBAAL,GAA8B,IAA9B;AACD,aAFD,MAEO;AACLK,qBAAO,CAACC,GAAR,CAAYvC,GAAZ;AACD;AACF,WATD;AAUD;;;;;;;uBAzCUgC,e,EAAe,2H,EAAA,0I,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,g2B;AAAA;AAAA;ACZ5B;;AAEE;;AACE;;AACE;;AAGF;;AAEA;;AACE;;AACE;;AAAiE;AAAA,mBAAS,IAAAQ,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAC1F;;AAIF;;AACF;;AAEA;;AAIA;;AAAyE;AAAA,mBAAS,IAAAH,MAAA,EAAT;AAAiB,WAAjB;;AAEvE;;AACF;;AAEF;;AAEF;;;;AA5B6B;;AAAA;;AAWd;;AAAA;;AAMN;;AAAA;;AAKG;;AAAA;;;;;;;;;sEDZCL,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjH,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwH,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBnB,YAAM,EAAE;AAFiB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYmB,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA3C,GAAG;AAAA,aAAIsC,OAAO,CAAClC,KAAR,CAAcJ,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {BannerService} from '../../shared/services/banner.service';\nimport {Banner} from '../../shared/models/banner';\n\n@Component({\n  selector: 'app-add-banner',\n  templateUrl: './add-banner.component.html',\n  styleUrls: ['./add-banner.component.css']\n})\nexport class AddBannerComponent implements OnInit {\n\n  public addBannerForm: FormGroup;\n\n  photo: string | ArrayBuffer;\n\n  loading = false;\n  newBanner = false;\n\n  constructor(private fb: FormBuilder, private bannerService: BannerService) {\n    this.addBannerForm = fb.group({\n      name: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  readUrl(event: any) {\n    this.loading = true;\n    setTimeout(() => {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n        reader.onload = (event2: ProgressEvent) => {\n          this.photo = (event2.target as FileReader).result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n      this.loading = false;\n    }, 500);\n  }\n\n  createBanner() {\n    const name = this.addBannerForm.value.name;\n    const imageUrl = this.photo.toString();\n    const newBanner = new Banner(name, imageUrl);\n    this.bannerService.createBanner(newBanner)\n      .then(() => {\n        this.newBanner = true;\n        this.resetForm();\n      });\n  }\n\n  resetForm() {\n    (document.getElementById('form') as HTMLFormElement).reset();\n    this.photo = null;\n  }\n}\n","<div class=\"add-banner-container\">\n\n  <div class=\"uk-width-1-1 uk-text-center\" *ngIf=\"newBanner\">\n    <p>Banner added successfully. Click <a routerLink=\"\">here</a> to see it.</p>\n  </div>\n\n  <div class=\"uk-grid uk-grid-large\" uk-grid>\n\n    <div class=\"new-banner-container uk-width-1-2@s\">\n      <h3>Add new banner</h3>\n      <form class=\"add-banner-form\" [formGroup]=\"addBannerForm\" id=\"form\">\n\n        <div class=\"uk-margin\">\n          <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\" type=\"text\" id=\"email\"\n                 formControlName=\"name\" placeholder=\"Name\" autocomplete=\"off\">\n        </div>\n\n        <div class=\"uk-margin\" uk-margin>\n          <div class=\"uk-width-1-2\" uk-form-custom=\"target: true\">\n            <input type=\"file\" (change)=\"readUrl($event)\">\n            <input class=\"uk-input\" type=\"text\" placeholder=\"Select image\" disabled>\n          </div>\n        </div>\n\n        <button class=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small\"\n                (click)=\"createBanner()\" [disabled]=\"addBannerForm.invalid || !this.photo\">\n          Create\n        </button>\n\n      </form>\n    </div>\n\n    <div class=\"preview-banner-container uk-width-1-2@s\">\n      <h3>Preview</h3>\n\n      <div class=\"banner uk-card uk-card-default uk-card-body\">\n        <img src=\"{{this.photo}}\" class=\"image\" alt=\"\" *ngIf=\"this.photo\">\n        <img src=\"./assets/images/noImageAvailable.png\" class=\"image\" alt=\"\" *ngIf=\"!this.photo\">\n\n        <img class=\"loading-image\" src=\"./assets/images/loading.svg\" *ngIf=\"loading\">\n      </div>\n\n    </div>\n\n  </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Product} from '../../shared/models/product';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  public addProductForm: FormGroup;\n\n  photo: string | ArrayBuffer;\n\n  loading = false;\n  newProduct = false;\n\n  constructor(private fb: FormBuilder, private productService: ProductService) {\n    this.addProductForm = fb.group({\n      name: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  readUrl(event: any) {\n    this.loading = true;\n    setTimeout(() => {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n        reader.onload = (event2: ProgressEvent) => {\n          this.photo = (event2.target as FileReader).result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n      this.loading = false;\n    }, 500);\n  }\n\n  createProduct() {\n    const name = this.addProductForm.value.name;\n    const imageUrl = this.photo.toString();\n    const newProduct = new Product(name, imageUrl);\n    this.productService.createProduct(newProduct)\n      .then(() => {\n        this.newProduct = true;\n        this.resetForm();\n      });\n  }\n\n  resetForm() {\n    (document.getElementById('form') as HTMLFormElement).reset();\n    this.photo = null;\n  }\n}\n","<div class=\"add-product-container\">\n\n  <div class=\"uk-width-1-1 uk-text-center\" *ngIf=\"newProduct\">\n    <p>Product added successfully. Click <a routerLink=\"\">here</a> to see it.</p>\n  </div>\n\n  <div class=\"uk-grid uk-grid-large\" uk-grid>\n\n    <div class=\"new-product-container uk-width-1-2@s\">\n      <h3>Add new product</h3>\n      <form class=\"add-product-form\" [formGroup]=\"addProductForm\" id=\"form\">\n\n        <div class=\"uk-margin\">\n          <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\" type=\"text\" id=\"email\"\n                 formControlName=\"name\" placeholder=\"Name\" autocomplete=\"off\">\n        </div>\n\n        <div class=\"uk-margin\" uk-margin>\n          <div class=\"uk-width-1-2\" uk-form-custom=\"target: true\">\n            <input type=\"file\" (change)=\"readUrl($event)\" id=\"fileInput\">\n            <input class=\"uk-input\" type=\"text\" placeholder=\"Select image\" disabled>\n          </div>\n        </div>\n\n        <button class=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small\"\n                (click)=\"createProduct()\" [disabled]=\"addProductForm.invalid || !this.photo\">\n          Create\n        </button>\n\n      </form>\n    </div>\n\n    <div class=\"preview-product-container uk-width-1-2@s\">\n      <h3>Preview</h3>\n\n      <div class=\"product uk-card uk-card-default uk-card-body\">\n        <img src=\"{{this.photo}}\" class=\"image\" alt=\"\" *ngIf=\"this.photo\">\n        <img src=\"./assets/images/noImageAvailable.png\" class=\"image\" alt=\"\" *ngIf=\"!this.photo\">\n\n        <img class=\"loading-image\" src=\"./assets/images/loading.svg\" alt=\"\" *ngIf=\"loading\">\n\n        <div class=\"information\" *ngIf=\"addProductForm.value.name\">\n          <div class=\"name\"><h3>{{addProductForm.value.name}}</h3></div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\n\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n  section = 'add-product';\n  subscription: Subscription;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.params.subscribe(params => {\n      if (params.section) {\n        this.section = params.section;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"dashboard-container\">\n\n  <app-sidenav class=\"desktop\"></app-sidenav>\n\n  <div class=\"dashboard-body-container\" [ngSwitch]=\"section\">\n    <app-add-product *ngSwitchDefault></app-add-product>\n    <app-manage-products *ngSwitchCase=\"'manage-products'\"></app-manage-products>\n    <app-add-banner *ngSwitchCase=\"'add-banner'\"></app-add-banner>\n    <app-manage-banners *ngSwitchCase=\"'manage-banners'\"></app-manage-banners>\n  </div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Banner} from '../../shared/models/banner';\nimport {BannerService} from '../../shared/services/banner.service';\n\n@Component({\n  selector: 'app-manage-banners',\n  templateUrl: './manage-banners.component.html',\n  styleUrls: ['./manage-banners.component.css']\n})\nexport class ManageBannersComponent implements OnInit {\n\n  public editBannerForm: FormGroup;\n\n  banners = [];\n  selectedBanner: Banner;\n\n  photo: string | ArrayBuffer;\n\n  loading = false;\n  editedBanner = false;\n\n  constructor(private fb: FormBuilder, private bannerService: BannerService) {\n    this.editBannerForm = fb.group({\n      name: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.bannerService.getAllBanners().then(banners => this.banners = banners);\n    this.editBannerForm.disable();\n  }\n\n  selectBanner(banner: any) {\n    this.resetForm();\n    this.selectedBanner = banner;\n    this.editBannerForm.patchValue({name: banner.name});\n    this.photo = banner.imageUrl;\n    this.editBannerForm.enable();\n  }\n\n  readUrl(event: any) {\n    this.loading = true;\n    setTimeout(() => {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n        reader.onload = (event2: ProgressEvent) => {\n          this.photo = (event2.target as FileReader).result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n      this.loading = false;\n    }, 500);\n  }\n\n  editBanner() {\n    this.selectedBanner.name = this.editBannerForm.value.name;\n    if (this.selectedBanner.imageUrl !== this.photo) {\n      this.selectedBanner.imageUrl = this.photo.toString();\n    }\n    this.bannerService.editBanner(this.selectedBanner)\n      .then(() => {\n        this.editedBanner = true;\n      });\n  }\n\n  deleteBanner() {\n    this.bannerService.deleteBanner(this.selectedBanner._id)\n      .then(removedBannerId => {\n        this.banners = this.banners.filter(e => e._id !== removedBannerId);\n        this.resetForm();\n      });\n  }\n\n  resetForm() {\n    (document.getElementById('form') as HTMLFormElement).reset();\n    this.selectedBanner = undefined;\n    this.photo = null;\n  }\n\n}\n","<div class=\"manage-banner-container uk-grid uk-grid-medium\" uk-grid>\n\n  <div class=\"uk-width-1-1 uk-text-center\" *ngIf=\"editedBanner\">\n    <p>Banner edited successfully. Click <a routerLink=\"\">here</a> to see it.</p>\n  </div>\n\n\n  <div class=\"uk-width-3-5@m uk-grid uk-grid-medium\" uk-grid>\n    <div class=\"list-banner-container uk-width-1-3@s\">\n      <h3>Banners</h3>\n      <ul class=\"uk-list uk-list-striped\">\n        <li *ngFor=\"let banner of banners\" (click)=\"selectBanner(banner)\">\n          {{banner.name}}\n          <span class=\"uk-align-right\" uk-icon=\"icon: pencil\"></span>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"edit-banner-container uk-width-2-3@s\">\n      <h3>Edit</h3>\n      <form class=\"add-banner-form\" [formGroup]=\"editBannerForm\" id=\"form\">\n\n        <div class=\"uk-margin\">\n          <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\" type=\"text\" id=\"email\"\n                 formControlName=\"name\" placeholder=\"Name\" autocomplete=\"off\">\n        </div>\n\n        <div class=\"uk-margin\" uk-margin>\n          <div class=\"uk-width-1-2\" uk-form-custom=\"target: true\">\n            <input type=\"file\" (change)=\"readUrl($event)\">\n            <input class=\"uk-input\" type=\"text\" placeholder=\"Edit image\" disabled>\n          </div>\n        </div>\n\n        <div class=\"uk-flex uk-margin-small\">\n          <button class=\"uk-button uk-button-primary uk-width-1-2\"\n                  (click)=\"editBanner()\"\n                  [disabled]=\"editBannerForm.invalid ||\n                  (editBannerForm.value.name == selectedBanner?.name &&\n                  photo == selectedBanner?.imageUrl)\">\n            Update\n          </button>\n          <button class=\"uk-button uk-button-danger uk-width-1-2\"\n                  (click)=\"deleteBanner()\"\n                  [disabled]=\"selectedBanner == undefined\">\n            Delete\n          </button>\n        </div>\n\n      </form>\n    </div>\n  </div>\n\n  <div class=\"preview-banner-container uk-width-2-5@m\">\n    <h3>Preview</h3>\n    <div class=\"banner uk-card uk-card-default uk-card-body\">\n      <img src=\"{{this.photo}}\" class=\"image\" *ngIf=\"photo\">\n      <img src=\"./assets/images/noImageAvailable.png\" class=\"image\" *ngIf=\"!photo\">\n\n      <img class=\"loading-image\" src=\"./assets/images/loading.svg\" *ngIf=\"loading\">\n    </div>\n  </div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Product} from '../../shared/models/product';\n\n@Component({\n  selector: 'app-manage-products',\n  templateUrl: './manage-products.component.html',\n  styleUrls: ['./manage-products.component.css']\n})\nexport class ManageProductsComponent implements OnInit {\n\n  public editProductForm: FormGroup;\n\n  products = [];\n  selectedProduct: Product;\n\n  photo: string | ArrayBuffer;\n\n  loading = false;\n  editedProduct = false;\n\n  constructor(private fb: FormBuilder, private productService: ProductService) {\n    this.editProductForm = fb.group({\n      name: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.productService.getAllProducts().then(products => this.products = products);\n    this.editProductForm.disable();\n  }\n\n  selectProduct(product: any) {\n    this.resetForm();\n    this.selectedProduct = product;\n    this.editProductForm.patchValue({name: product.name});\n    this.photo = product.imageUrl;\n    this.editProductForm.enable();\n  }\n\n  readUrl(event: any) {\n    this.loading = true;\n    setTimeout(() => {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n        reader.onload = (event2: ProgressEvent) => {\n          this.photo = (event2.target as FileReader).result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n      this.loading = false;\n    }, 500);\n  }\n\n  editProduct() {\n    this.selectedProduct.name = this.editProductForm.value.name;\n    if (this.selectedProduct.imageUrl !== this.photo) {\n      this.selectedProduct.imageUrl = this.photo.toString();\n    }\n    this.productService.editProduct(this.selectedProduct)\n      .then(() => {\n        this.editedProduct = true;\n      });\n  }\n\n  deleteProduct() {\n    this.productService.deleteProduct(this.selectedProduct._id)\n      .then(removedProductId => {\n        this.products = this.products.filter(e => e._id !== removedProductId);\n        this.resetForm();\n      });\n  }\n\n  resetForm() {\n    (document.getElementById('form') as HTMLFormElement).reset();\n    this.selectedProduct = undefined;\n    this.photo = null;\n  }\n\n}\n\n","<div class=\"manage-product-container uk-grid uk-grid-medium\" uk-grid>\n\n  <div class=\"uk-width-1-1 uk-text-center\" *ngIf=\"editedProduct\">\n    <p>Product edited successfully. Click <a routerLink=\"\">here</a> to see it.</p>\n  </div>\n\n\n  <div class=\"uk-width-3-5@m uk-grid uk-grid-medium\" uk-grid>\n    <div class=\"list-product-container uk-width-1-3@s\">\n      <h3>Products</h3>\n      <ul class=\"uk-list uk-list-striped\">\n        <li *ngFor=\"let product of products\" (click)=\"selectProduct(product)\">\n          {{product.name}}\n          <span class=\"uk-align-right\" uk-icon=\"icon: pencil\"></span>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"edit-product-container uk-width-2-3@s\">\n      <h3>Edit</h3>\n      <form class=\"add-product-form\" [formGroup]=\"editProductForm\" id=\"form\">\n\n        <div class=\"uk-margin\">\n          <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\" type=\"text\" id=\"email\"\n                 formControlName=\"name\" placeholder=\"Name\" autocomplete=\"off\">\n        </div>\n\n        <div class=\"uk-margin\" uk-margin>\n          <div class=\"uk-width-1-2\" uk-form-custom=\"target: true\">\n            <input type=\"file\" (change)=\"readUrl($event)\">\n            <input class=\"uk-input\" type=\"text\" placeholder=\"Edit image\" disabled>\n          </div>\n        </div>\n\n        <div class=\"uk-flex uk-margin-small\">\n          <button class=\"uk-button uk-button-primary uk-width-1-2\"\n                  (click)=\"editProduct()\"\n                  [disabled]=\"editProductForm.invalid ||\n                  (editProductForm.value.name == selectedProduct?.name &&\n                  photo == selectedProduct?.imageUrl)\">\n            Update\n          </button>\n          <button class=\"uk-button uk-button-danger uk-width-1-2\"\n                  (click)=\"deleteProduct()\"\n                  [disabled]=\"selectedProduct == undefined\">\n            Delete\n          </button>\n        </div>\n\n      </form>\n    </div>\n  </div>\n\n  <div class=\"preview-product-container uk-width-2-5@m\">\n    <h3>Preview</h3>\n    <div class=\"product uk-card uk-card-default uk-card-body\">\n      <img src=\"{{this.photo}}\" class=\"image\" *ngIf=\"photo\">\n      <img src=\"./assets/images/noImageAvailable.png\" class=\"image\" *ngIf=\"!photo\">\n\n      <img class=\"loading-image\" src=\"./assets/images/loading.svg\" *ngIf=\"loading\">\n\n      <div class=\"information\" *ngIf=\"editProductForm.value.name\">\n        <div class=\"name\"><h3>{{editProductForm.value.name}}</h3></div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sidenav-container uk-card uk-card-default uk-card-body uk-width-1-2@s\">\n  <ul class=\"top-nav uk-nav-default uk-nav-parent-icon\" uk-nav>\n    <li><a routerLink=\"/dashboard/add-product\">Add Product</a></li>\n    <li><a routerLink=\"/dashboard/manage-products\">Manage Products</a></li>\n    <li class=\"uk-nav-divider\" style=\"margin: 20px 0\"></li>\n    <li><a routerLink=\"/dashboard/add-banner\">Add Banner</a></li>\n    <li><a routerLink=\"/dashboard/manage-banners\">Manage Banners</a></li>\n  </ul>\n<!--  <ul class=\"bottom-nav uk-nav-default uk-nav-parent-icon\" uk-nav>-->\n<!--    <li class=\"uk-nav-header\">Header</li>-->\n<!--    <li><a href=\"#\"><span class=\"uk-margin-small-right\" uk-icon=\"icon: table\"></span> Item</a></li>-->\n<!--    <li><a href=\"#\"><span class=\"uk-margin-small-right\" uk-icon=\"icon: thumbnails\"></span> Item</a></li>-->\n<!--    <li class=\"uk-nav-divider\"></li>-->\n<!--    <li><a href=\"#\"><span class=\"uk-margin-small-right\" uk-icon=\"icon: trash\"></span> Item</a></li>-->\n<!--  </ul>-->\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {SignInComponent} from './sign-in/sign-in.component';\nimport {AuthGuard} from './shared/guards/auth.guard';\nimport {DashboardComponent} from './admin/dashboard/dashboard.component';\nimport {ContactComponent} from './contact/contact.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'contact', component: ContactComponent},\n  {path: 'admin', component: SignInComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'dashboard/:section', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: '**', component: HomeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n\n","<app-header></app-header>\n\n<div class=\"body-container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './header/header.component';\nimport {HomeComponent} from './home/home.component';\nimport {ProductListComponent} from './product-list/product-list.component';\nimport {ProductListItemComponent} from './product-list/product-list-item/product-list-item.component';\nimport {SignInComponent} from './sign-in/sign-in.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {JwtInterceptor} from './shared/helpers/jwt.interceptor';\nimport {ErrorInterceptor} from './shared/helpers/error.interceptor';\nimport {ManageProductsComponent} from './admin/manage-products/manage-products.component';\nimport {SidenavComponent} from './admin/sidenav/sidenav.component';\nimport {AddProductComponent} from './admin/add-product/add-product.component';\nimport {DashboardComponent} from './admin/dashboard/dashboard.component';\nimport {AddBannerComponent} from './admin/add-banner/add-banner.component';\nimport {ManageBannersComponent} from './admin/manage-banners/manage-banners.component';\nimport { ContactComponent } from './contact/contact.component';\nimport {CachingInterceptor} from './shared/helpers/caching.interceptor';\nimport {RequestCache} from './shared/helpers/request-cache';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    ProductListComponent,\n    ProductListItemComponent,\n    SignInComponent,\n    ManageProductsComponent,\n    SidenavComponent,\n    AddProductComponent,\n    DashboardComponent,\n    AddBannerComponent,\n    ManageBannersComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    // RequestCache,\n    // { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  signOut() {\n    this.authService.signOut();\n  }\n}\n","<!------------DESKTOP------------>\n<nav class=\"uk-navbar-container desktop\" uk-navbar>\n  <div class=\"uk-navbar-left\">\n\n    <ul class=\"uk-navbar-nav\">\n      <li class=\"uk-active\">\n        <a routerLink=\"\" class=\"logo\" title=\"Lompaz\">\n          <img src=\"./assets/images/alacruzs.png\" style=\"height: 50px\">\n        </a>\n      </li>\n      <li><a routerLink=\"\">Home</a></li>\n      <li><a routerLink=\"/contact\">Contacto</a></li>\n    </ul>\n\n  </div>\n\n  <div class=\"uk-navbar-right\" *ngIf=\"authService.isAuth()\">\n\n    <ul class=\"uk-navbar-nav\">\n      <li><a routerLink=\"dashboard\">Dashboard</a></li>\n      <li><a (click)=\"signOut()\" uk-icon=\"icon: sign-out; ratio: 1.3\"></a></li>\n    </ul>\n\n  </div>\n</nav>\n\n\n<!------------MOBILE------------>\n<nav class=\"uk-navbar-container mobile\" uk-navbar>\n  <div class=\"uk-navbar-left\">\n    <ul class=\"uk-navbar-nav\">\n      <li class=\"uk-active\">\n        <a routerLink=\"\" class=\"logo\" title=\"Lompaz\">\n          <img src=\"./assets/images/alacruzs.png\" style=\"height: 50px\">\n        </a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"uk-navbar-right\">\n    <a class=\"uk-navbar-toggle\" uk-toggle=\"target: #offcanvas-usage\">\n      <span uk-navbar-toggle-icon></span>\n    </a>\n  </div>\n</nav>\n\n<div class=\"sidenav\" id=\"offcanvas-usage\" uk-offcanvas=\"flip: true\">\n  <div class=\"uk-offcanvas-bar\">\n\n    <button class=\"uk-offcanvas-close\" type=\"button\" uk-close></button>\n\n    <h3>Title</h3>\n\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../shared/services/product.service';\nimport {BannerService} from '../shared/services/banner.service';\nimport {Product} from '../shared/models/product';\nimport {Banner} from '../shared/models/banner';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  products: Product[];\n  banners: Banner[];\n\n  constructor(private productService: ProductService, private bannerService: BannerService) {\n  }\n\n  ngOnInit(): void {\n    this.productService.getAllProducts().then(products => this.products = products);\n\n    this.bannerService.getAllBanners().then(banners => this.banners = banners);\n  }\n\n}\n","<div class=\"home-container\">\n\n  <div class=\"slideshow-container\">\n    <div class=\"slideshow uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\"\n         uk-slideshow=\"autoplay: true; ratio: 5:2\">\n\n      <ul class=\"uk-slideshow-items\">\n        <li *ngFor=\"let banner of banners\">\n          <img src=\"{{banner.imageUrl}}\" alt=\"\" uk-cover>\n        </li>\n      </ul>\n\n      <a class=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"#\" uk-slidenav-previous\n         uk-slideshow-item=\"previous\"></a>\n      <a class=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"#\" uk-slidenav-next\n         uk-slideshow-item=\"next\"></a>\n\n    </div>\n  </div>\n\n  <div class=\"products-container\">\n    <div class=\"products\">\n\n      <h3 class=\"section-title\">Nuestros Productos</h3>\n\n      <app-product-list [products]=\"products\"></app-product-list>\n    </div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  styleUrls: ['./product-list-item.component.css']\n})\nexport class ProductListItemComponent implements OnInit {\n\n  @Input() product;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"product uk-card uk-card-default uk-card-body\">\n  <img src=\"{{product?.imageUrl}}\" class=\"image\">\n\n  <div class=\"information\">\n    <div class=\"name\"><h3>{{product?.name}}</h3></div>\n  </div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  @Input() products;\n\n  productsPerRow = 2;\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"product-list-container uk-grid uk-grid-medium uk-child-width-1-{{productsPerRow}}@s uk-grid-match\" uk-grid>\n  <app-product-list-item *ngFor=\"let product of products\" [product]=\"product\"></app-product-list-item>\n</div>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n\n    this.router.navigate(['/admin'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpEvent, HttpInterceptor} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto signOut if 401 response returned from api\n        this.authService.signOut();\n        location.reload(true);\n      }\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","export class Banner {\n  // tslint:disable-next-line:variable-name\n  constructor(public name: string, public imageUrl: string, public _id?: string) {\n  }\n}\n","export class Product {\n  // tslint:disable-next-line:variable-name\n  constructor(public name: string, public imageUrl: string, public _id?: string) {\n  }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  public isAuth() {\n    return window.localStorage.getItem('currentUser') !== null;\n  }\n\n  public signIn(email: string, password: string) {\n    return this.http.post<any>(`${environment.apiUrl}auth/sign-in`, {email, password}).toPromise()\n      .then(user => {\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      });\n  }\n\n  public signOut() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Banner} from '../models/banner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BannerService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getAllBanners(): Promise<Banner[]> {\n    return this.http.get<any>(`${environment.apiUrl}banner/all`).toPromise();\n  }\n\n  public createBanner(banner: Banner): Promise<Banner> {\n    return this.http.post<any>(`${environment.apiUrl}banner/create`, banner).toPromise();\n  }\n\n  public editBanner(banner: Banner): Promise<Banner> {\n    return this.http.post<any>(`${environment.apiUrl}banner/edit`, banner).toPromise();\n  }\n\n  /**\n   * Deletes the banner selected\n   * @param _id: id of the banner to delete\n   * Returns: id of the banner deleted\n   */\n  // tslint:disable-next-line:variable-name\n  public deleteBanner(_id: string): Promise<string> {\n    return this.http.post<any>(`${environment.apiUrl}banner/delete`, {_id}).toPromise();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Product} from '../models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public async getAllProducts(): Promise<Product[]> {\n    return this.http.get<any>(`${environment.apiUrl}product/all`).toPromise();\n  }\n\n\n  public createProduct(product: Product): Promise<Product> {\n    return this.http.post<any>(`${environment.apiUrl}product/create`, product).toPromise();\n  }\n\n  public editProduct(product: Product): Promise<Product> {\n    return this.http.post<any>(`${environment.apiUrl}product/edit`, product).toPromise();\n  }\n\n  /**\n   * Deletes the product selected\n   * @param _id: id of the product to delete\n   * Returns: id of the product deleted\n   */\n  // tslint:disable-next-line:variable-name\n  public deleteProduct(_id: string): Promise<string> {\n    return this.http.post<any>(`${environment.apiUrl}product/delete`, {_id}).toPromise();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport * as UIkit from 'uikit';\nimport {AuthService} from '../shared/services/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  public signInForm: FormGroup;\n  public showPass: boolean;\n\n  invalidEmailOrPassword = false;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\n    this.signInForm = fb.group({\n      email: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.showPass = false;\n\n    this.signInForm.get('email').valueChanges.subscribe(() => {\n      this.invalidEmailOrPassword = false;\n    });\n\n    this.signInForm.get('password').valueChanges.subscribe(() => {\n      this.invalidEmailOrPassword = false;\n    });\n  }\n\n  showPassword() {\n    this.showPass = !this.showPass;\n  }\n\n  signIn() {\n    this.authService.signIn(this.signInForm.value.email, this.signInForm.value.password).then(() => {\n      this.signInForm.reset();\n      this.router.navigate(['']);\n    }).catch(err => {\n      if (err === 'invalid credentials') {\n        this.invalidEmailOrPassword = true;\n      } else {\n        console.log(err);\n      }\n    });\n  }\n}\n","<div class=\"sign-in-container\">\n\n  <form class=\"sign-in-form\" [formGroup]=\"signInForm\">\n    <div class=\"uk-margin\">\n      <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\" type=\"text\" id=\"email\"\n             formControlName=\"email\" placeholder=\"Email\"\n             pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n    </div>\n\n    <div class=\"uk-margin uk-margin-remove-bottom\">\n      <div class=\"uk-inline uk-width-1-1\">\n        <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: unlock\" (click)=\"showPassword()\"></a>\n        <input class=\"uk-input uk-form-width-medium uk-form-large uk-width-1-1\"\n               type=\"{{showPass ? 'text' : 'password' }}\"\n               id=\"password\" formControlName=\"password\" placeholder=\"Contraseña (min. 8 caracteres)\"\n               pattern=\".{8,}\">\n      </div>\n    </div>\n\n    <div *ngIf=\"invalidEmailOrPassword\" class=\"warning uk-margin-small-top\">\n      Usuario o contraseña incorrecta.\n    </div>\n\n    <button class=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small\" (click)=\"signIn()\"\n            [disabled]=\"signInForm.invalid\">\n      Entrar\n    </button>\n\n  </form>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}